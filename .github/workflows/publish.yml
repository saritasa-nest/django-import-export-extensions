name: Publish to PyPI
on:
  release:
    types: [published]
  workflow_dispatch:
permissions:
  contents: read
  id-token: write # For Trusted Publishing
jobs:
  build-and-publish:
    name: Build and publish package
    runs-on: ubuntu-latest
    environment:
      name: PyPI
      url: https://pypi.org/project/django-import-export-extensions/
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.14'
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Cache virtualenv
        id: cache-venv
        uses: actions/cache@v4
        with:
          path: .venv
          key: ${{ runner.os }}-publish-${{ hashFiles('**/poetry.lock') }}
      - name: Install only main dependencies
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          poetry install --only main --no-interaction --no-root
      - name: Ensure tag matches pyproject version
        id: version-check
        run: |
          TAG="${GITHUB_REF_NAME}"
          VERSION=$(poetry version -s)
          echo "Tag: $TAG | pyproject: $VERSION"
          if [ "$TAG" != "$VERSION" ]; then
            echo "::error::Git tag ($TAG) does not match pyproject version ($VERSION)" >&2
            exit 1
          fi
          echo "package_version=$VERSION" >> "$GITHUB_OUTPUT"
      - name: Build artifacts (dist)
        run: |
          poetry build
      - name: Publish to PyPI (Trusted Publisher)
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          print-hash: true
